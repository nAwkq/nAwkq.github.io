[
{
	"uri": "/",
	"title": "Automated Data Security System with AWS KMS, Macie, and EventBridge",
	"tags": [],
	"description": "",
	"content": "Automated Data Security System with AWS KMS, Macie, and EventBridge Overview In this lab, you will learn the basics and hands-on practices with AWS KMS, Macie, and EventBridge. Content Introduction Prerequisite Steps Use EventBridge to Connect with SNS and Lambda Test Lambda Function to Trigger KMS Encryption Clean up Resources "
},
{
	"uri": "/3-accessibilitytoinstances/3.1-sns/",
	"title": "Create Connection to SNS",
	"tags": [],
	"description": "",
	"content": "Create Connection to SNS The connection between EventBridge and SNS allows for automatic notifications when events occur. When an event is triggered in EventBridge, it sends notifications to SNS, alerting users or systems about important events such as sensitive data detection. This helps optimize event processing and enables quick responses.\nAccess the AWS EventBridge management console.\nClick Create rule. In the Target types section, select AWS service.\nIn the Select a target field, choose SNS topic.\nThen, in the Topic field, select the rule you created, for example, maciesns.\nClick Next. Continue by selecting Create rule. Successfully created! Now, return to Macie and perform a scan of the S3 data (review here).\nAfter a successful scan, check the email linked to SNS. Here is the result: Explanation of the information: General Event Information\nVersion: The version of the event.\rid: The event ID.\rdetail-type: The event type, here it is Macie Finding.\rsource: The source of the event, here it is aws.macie.\raccount: The AWS account ID where the event was generated.\rtime: The time the event was created.\rregion: The AWS region where the event occurred (ap-southeast-1 is Singapore).\rresources: Resources related to the event (in this case, no specific resources are listed).\rFinding Details\ntype: The type of sensitive data detected, in this case, it is SensitiveData:S3Object/Financial, meaning financial sensitive data was found in an S3 object.\rtitle: The title of the finding, describing the type of data detected (S3 object containing financial information).\rdescription: A detailed description of the sensitive data found (contains bank account numbers or credit card numbers).\rseverity: The severity of the finding, with a score of 3 (high).\rcreatedAt and updatedAt: The creation and update time of the finding.\rcount: The number of times sensitive data was detected (1 time).\rImpacted Resource Details\nS3 Bucket\narn: The Amazon Resource Name of the S3 bucket.\rname: The name of the S3 bucket is \u0026quot;datas3jobs\u0026quot;.\rowner: Information about the bucket owner (username and AWS account ID).\rpublicAccess: Indicates the public access of the bucket, here it is \u0026quot;NOT_PUBLIC\u0026quot; (not public).\rS3 Object\nbucketArn: The Amazon Resource Name of the object in the bucket.\rkey: The file name in the bucket (cc.txt).\rlastModified: The last modified time of the S3 object.\rsize: The size of the S3 object (168 bytes).\rstorageClass: The storage class of the object (STANDARD).\rSensitive Data Detection Details\nsensitiveData: Detailed information about the sensitive data detected\rcategory: The category of sensitive information is FINANCIAL_INFORMATION (financial information).\rdetections: Detected sensitive information of CREDIT_CARD_NUMBER (credit card number).\roccurrences: The locations of the credit card numbers in the file (lines 2 to 6).\rAdditional Analysis Results Information\ndetailedResultsLocation: The S3 path containing the detailed results of the data analysis (compressed JSON file).\rStatus and Results\nstatus: The status of the analysis job, here it is COMPLETE.\rsizeClassified: The size of the data that was classified (168 bytes).\rmoreDetections: No additional detections after the analysis job was completed.\rsensitiveData: Detected credit card information in the document.\r"
},
{
	"uri": "/2-prerequiste/2.1-creates3/",
	"title": "Create S3 Bucket",
	"tags": [],
	"description": "",
	"content": "Create S3 Bucket In this step, we will create an S3 Bucket to upload and store data.\nAccess the S3 management console.\nSelect Create bucket, name it \u0026ldquo;datacase1\u0026rdquo;, and click Create. Bucket has been successfully created. Here are some sample data files for testing available here.\nClick Upload. Select Add file. Choose the required files and click Upload. "
},
{
	"uri": "/1-introduce/",
	"title": "Introduction",
	"tags": [],
	"description": "",
	"content": "The automated data security system with AWS KMS, Macie, and EventBridge is a solution that uses AWS services like KMS, Macie, and EventBridge to manage and secure data comprehensively. This system offers modern features to ensure data safety and automate security management processes.\nThe data security system using AWS KMS, Macie, and EventBridge helps protect and manage data automatically. Data is uploaded to S3, encrypted with KMS, and scanned by Macie to detect sensitive information. When a discovery is made, EventBridge generates an event to trigger Lambda, performing tasks like data processing and sending notifications via SNS. This system ensures security and a rapid response to threats.\nWith this system, you will gain the following key benefits:\nSecure Data Encryption: Data is encrypted using AWS KMS, ensuring protection even against unauthorized access. Sensitive Information Detection: Amazon Macie automatically scans data to detect sensitive information such as PII or financial data. Rapid Event Response: When a risk is detected, EventBridge triggers an automated process via AWS Lambda, allowing prompt resolution. Instant Notifications: Alerts are sent to administrators through Amazon SNS, keeping you proactive in data security management. Centralized and Efficient Management: Seamlessly integrated with other AWS services like S3 and IAM, the system simplifies access control management. This system not only protects your data but also saves time and costs in security management and monitoring.\n"
},
{
	"uri": "/3-accessibilitytoinstances/3.2-lambda/",
	"title": "Create Connection to Lambda",
	"tags": [],
	"description": "",
	"content": "Create Lambda Function The connection between EventBridge and Lambda enables automatic triggering of a Lambda function when an event occurs. When an event is detected in EventBridge, it triggers Lambda to perform tasks such as data processing, sending notifications, or executing custom actions. This automates workflows and ensures a quick response to events.\nAccess the Lambda management console and select Create Function.\nChoose Author from scratch.\nThen assign a name, in this case, \u0026ldquo;lambdaKms,\u0026rdquo; select Python, and finally click Create.\nEnter the following code into the editor and click Deploy:\nimport boto3\rimport json\r# Initialize S3 client\rs3 = boto3.client('s3')\rkms_key_id = 'arn:aws:kms:ap-southeast-1:124355683434:key/7530651d-7603-48cd-a96c-b18499d302ac'\rdef lambda_handler(event, context):\rprint(\u0026quot;Event received:\u0026quot;, json.dumps(event)) # Log event for inspection\rtry:\r# Extract S3 object details from the Macie event\rdetail = event.get('detail')\rbucket_name = detail['resourcesAffected']['s3Bucket']['name']\robject_key = detail['resourcesAffected']['s3Object']['key']\r# Log bucket and object key details\rprint(f\u0026quot;Bucket: {bucket_name}, Object: {object_key}\u0026quot;)\r# Copy and encrypt the object in S3 using KMS\rcopy_source = {'Bucket': bucket_name, 'Key': object_key}\rs3.copy_object(\rBucket=bucket_name,\rKey=object_key,\rCopySource=copy_source,\rServerSideEncryption='aws:kms',\rSSEKMSKeyId=kms_key_id\r)\rprint(\u0026quot;Data successfully encrypted!\u0026quot;)\rreturn {\r'statusCode': 200,\r'body': json.dumps('Data successfully encrypted!')\r}\rexcept Exception as e:\rprint(f\u0026quot;Error occurred: {str(e)}\u0026quot;)\rreturn {\r'statusCode': 500,\r'body': json.dumps(f'Error: {str(e)}')\r}\rCreate Connection with Lambda Access the AWS EventBridge management console.\nClick Create rule. Assign a name to the rule, for example, \u0026ldquo;maciekms,\u0026rdquo; and write a Description.\nThen select Next. Continue by selecting Use pattern form, then AWS service, Macie, and Macie Finding.\nFinally, click Next.\nIn the Select a target section, choose Lambda function, then select the Function you created earlier, named lambdaKms.\nContinue with Next and click Create.\nReturn to your Lambda Function, and in the Configuration section, select Role name.\nHere, add the required Policy by selecting Create inline policy.\nEnter the following code, then click Next:\n{\r\u0026quot;Version\u0026quot;: \u0026quot;2012-10-17\u0026quot;,\r\u0026quot;Statement\u0026quot;: [\r{\r\u0026quot;Effect\u0026quot;: \u0026quot;Allow\u0026quot;,\r\u0026quot;Action\u0026quot;: [\r\u0026quot;kms:Encrypt\u0026quot;,\r\u0026quot;kms:Decrypt\u0026quot;,\r\u0026quot;kms:GenerateDataKey\u0026quot;,\r\u0026quot;kms:DescribeKey\u0026quot;\r],\r\u0026quot;Resource\u0026quot;: \u0026quot;arn:aws:kms:ap-southeast-1:124355683434:key/7530651d-7603-4c5d-9c37-dcc7a12a2489\u0026quot;\r}\r]\r}\rFinally, assign a name, for example, \u0026ldquo;kmskeylambda,\u0026rdquo; and select Create.\nYou now have all the necessary Policies for Lambda.\n"
},
{
	"uri": "/2-prerequiste/2.2-createiamrole/",
	"title": "Create IAM User and IAM Role",
	"tags": [],
	"description": "",
	"content": "In this step, we will create IAM Users and IAM Roles. For IAM Users, we will create two users: \u0026ldquo;useronlyread\u0026rdquo; with permission to view encrypted content and \u0026ldquo;userlock\u0026rdquo; with no permission to view encrypted content. For IAM Roles, we will create two new policies named \u0026ldquo;kmsonlyread\u0026rdquo; to integrate with the above users.\nCreate Policy and IAM Role Steps to Create Policy and IAM Role\nAccess the IAM management console. In the left navigation bar, click Policies, then select JSON.\nEnter the following code into the Policy editor, then save and click Next:\n{ \u0026#34;Version\u0026#34;: \u0026#34;2012-10-17\u0026#34;, \u0026#34;Statement\u0026#34;: [ { \u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;, \u0026#34;Action\u0026#34;: [ \u0026#34;kms:Decrypt\u0026#34;, \u0026#34;kms:DescribeKey\u0026#34; ], \u0026#34;Resource\u0026#34;: \u0026#34;arn:aws:kms:your-region:your-account-id:key/your-key-id\u0026#34; } ] } ![policy](/images/2.prerequisite/2.2/2.2.1/nhapvaodoancode_saudosaveVaNEXT.png) Next, assign a name, in this case, \u0026#34;kmsonlyread,\u0026#34; write a **Description**, and finally click **Create**. ![policy](/images/2.prerequisite/2.2/2.2.1/datten_vietdescription_saudoCreate.png) Successfully created! ![policy](/images/2.prerequisite/2.2/2.2.1/dataothanhcong.png) Next, proceed to create an IAM Role. Access the [IAM management console](https://console.aws.amazon.com/iamv2/). Click **Role**, then select **AWS service**, followed by **System Manager**, and click **Next**. ![role](/images/2.prerequisite/2.2/2.2.2/chonAWSservice_tinvachonSystemManager_NExt.png) Find and select the policy named \u0026#34;kmsonlyread,\u0026#34; then click **Next**. ![role](/images/2.prerequisite/2.2/2.2.2/timvachonKMSOnlyread_Next.png) Assign a name, in this case, \u0026#34;kmsonlyread,\u0026#34; write a **Description**, and finally click **Create**. ![role](/images/2.prerequisite/2.2/2.2.2/dattenKMSonlyread_vietdescription_chonCreate.png) Repeat these steps to create additional roles as needed. Click **Role**, then select **AWS service**, followed by **System Manager**, and click **Next**. ![role](/images/2.prerequisite/2.2/2.2.3/chonAWSservice_tinvachonSystemManager_NExt_2.png) Find and select the policies named \u0026#34;AWSKeyManagementServicePowerUser\u0026#34; and \u0026#34;IAMFullAccess,\u0026#34; then click **Next**. ![role](/images/2.prerequisite/2.2/2.2.3/timvachonAWSkeyMS_2.png) ![role](/images/2.prerequisite/2.2/2.2.3/vaIAMfullaccess_2.png) Assign a name, in this case, \u0026#34;kmskeyadmin,\u0026#34; write a **Description**, and finally click **Create**. ![role](/images/2.prerequisite/2.2/2.2.3/dattenlaKMSkeyadmin_2.png) Successfully created! ![role](/images/2.prerequisite/2.2/2.2.3/taothanhcong2role.png) ### Create IAM User Access the [IAM management console](https://console.aws.amazon.com/iamv2/). In the left navigation bar, click **User** and then select **Create user**. ![iam](/images/2.prerequisite/2.2/2.2.4/chonCreateuser.png) Assign a name for the user, in this case, \u0026#34;useronlyread.\u0026#34; Then select **I want to create an IAM user**, set the **Password**, and click **Next**. ![iam](/images/2.prerequisite/2.2/2.2.4/datteb_chonIwant_datpass_chonNExt.png) Continue by selecting **Attach policies directly**, find \u0026#34;kmsonlyread,\u0026#34; and click **Next**. Finally, click **Create**. ![iam](/images/2.prerequisite/2.2/2.2.4/chonKMSonly_next_chonCreate.png) Successfully created! ![iam](/images/2.prerequisite/2.2/2.2.4/dataothanhcong_sueronlyread.png) Repeat the steps to create another user. Assign a name for the user, in this case, \u0026#34;userlock.\u0026#34; Then select **I want to create an IAM user**, set the **Password**, and click **Next**. ![iam](/images/2.prerequisite/2.2/2.2.5/datteb_chonIwant_datpass_chonNExt_2.png) Continue by selecting **Attach policies directly**, find \u0026#34;AmazonS3ReadOnlyAccess,\u0026#34; and click **Next**. Finally, click **Create**. ![iam](/images/2.prerequisite/2.2/2.2.5/chons3read_next_chonCreate_2.png) Successfully created! ![iam](/images/2.prerequisite/2.2/2.2.5/dataothanhcong2user.png) We will now proceed to the next preparation steps! "
},
{
	"uri": "/2-prerequiste/",
	"title": "Preparation Steps",
	"tags": [],
	"description": "",
	"content": "To deploy the system, you need to complete the following preparation steps:\nCreate S3 Bucket: Securely store data.\nCreate IAM User and IAM Role: Manage access permissions and security. You can refer to the lab Access Management with AWS IAM.\nCreate Macie: Detect and protect sensitive data.\nCreate SNS: Set up event notifications.\nCreate KMS: Encrypt data and manage security keys.\nContents Create S3 Bucket Create IAM User and IAM Role Create Macie Create SNS Create KMS "
},
{
	"uri": "/2-prerequiste/2.3-createmacie/",
	"title": "Create Macie",
	"tags": [],
	"description": "",
	"content": "Create Macie In this step, we will set up Macie. Amazon Macie is an AWS service that uses machine learning to automatically detect, classify, and protect sensitive data, particularly in S3. It helps identify critical information like PII, credit card numbers, and generates alerts when risks are detected.\nAccess the Macie management console.\nSelect Get started. Click Enable Macie.\nWait for Macie to load, then select Create job.\nYou will need to wait approximately 10 minutes before proceeding to the next step.\nHere, you can select Scheduled job to enable automatic scans or One-time job for a single scan. To save time, we will use One-time job, then click Next. Next, name your Macie Job. In this case, name it \u0026ldquo;usecase1data\u0026rdquo; and select Create job. Wait for the job creation process to complete. Once it is done, review the results of what Macie has scanned in your Bucket.\nYou will need to wait approximately 10–20 minutes before proceeding to the next step.\nSelect Show results -\u0026gt; Show findings. Here, we can detect that the file Credit cards - cc.txt has a \u0026ldquo;High severity level.\u0026rdquo;\nWe have successfully created and tested Macie in detecting files with high severity. Next, we will use the EventBridge service to connect with SNS and Lambda to send notifications and encrypt data.\n"
},
{
	"uri": "/3-accessibilitytoinstances/",
	"title": "Use EventBridge to Connect to SNS and Lambda",
	"tags": [],
	"description": "",
	"content": "What is Amazon EventBridge? Amazon EventBridge is AWS\u0026rsquo;s serverless event bus service, allowing the creation of event-driven applications by connecting data from custom applications, SaaS applications, and AWS services. EventBridge helps route, filter, and transform events, with integration support for over 200 AWS services and more than 45 SaaS partners.\nSteps to Follow In this step, we will create the connection between EventBridge, SNS, and Lambda.\nThe connection between SNS and Lambda is an automation solution for notifications and event processing. When an event occurs, SNS sends notifications to Lambda to perform tasks such as sending alerts, processing data, or storing information. This helps optimize processes and ensure effective response to important events.\nContents Create Connection to SNS Create Connection to Lambda "
},
{
	"uri": "/2-prerequiste/2.4-createsns/",
	"title": "Create SNS",
	"tags": [],
	"description": "",
	"content": "Amazon SNS Amazon SNS (Simple Notification Service) is an AWS service that enables fast, flexible notification delivery to multiple recipients via protocols such as email, SMS, or HTTP/HTTPS. SNS supports creating topics to broadcast notifications to multiple subscribers simultaneously. It is commonly used in real-time notification systems or automated alerts.\nAccess the SNS management console.\nAssign a name to the topic, then select Next step. Follow the steps shown in the image. In the Publishers and Subscribers sections, enter the account ID, then select Create topic. This is the interface after successfully creating the topic. Next, click on Create Subscription. In the Protocol field, select Email.\nIn the Endpoint field, enter the email address to receive notifications (in this case, a personal Gmail address).\nThen select Create Subscription. Now, check the registered Gmail account and click Confirm Subscription to confirm. You have successfully created an SNS topic and registered an email to receive notifications. Next, you can use EventBridge to connect with SNS.\n"
},
{
	"uri": "/4-s3log/",
	"title": "Testing Feature: Lambda Triggers KMS for Encryption",
	"tags": [],
	"description": "",
	"content": "The following outlines the process of evaluating and testing system components to ensure accuracy, efficiency, and security. The testing includes verifying AWS services such as KMS, Macie, EventBridge, SNS, and Lambda to ensure they meet requirements, handle events securely, and send notifications without errors. Afterward, we can assess the program\u0026rsquo;s security features.\nTesting Steps Create and Upload Data to S3:\nFollow the steps to create and upload data to S3, using the sample files provided for testing here.\nCreate a Macie Job:\nSet up a job to start scanning the data as described here.\nMacie Notification:\nAfter Macie completes the scan, SNS will send a notification to the selected Gmail address.\nThe Gmail notification will appear as shown below:\nVerify Encryption in S3:\nLog in as the user \u0026ldquo;userlock\u0026rdquo;.\nAfter accessing S3, try to view the file \u0026ldquo;cc.txt.\u0026rdquo; You will find it inaccessible due to encryption.\nVerify Read Access:\nLog in as the user \u0026ldquo;useronlyread\u0026rdquo;.\nYou will be able to view the file.\n"
},
{
	"uri": "/5-cleanup/",
	"title": "Clean Up Resources",
	"tags": [],
	"description": "",
	"content": "We will follow these steps to delete the resources created during this practice to avoid incurring unintended costs.\nDelete S3 Bucket In the S3 homepage, first Empty bucket.\nSelect the Bucket you want to delete, then click Empty.\nType \u0026ldquo;permanently delete,\u0026rdquo; then click Empty.\nNow, you can delete the Bucket.\nSelect the Bucket you want to delete, then click Delete.\nType the bucket name \u0026ldquo;datacase1,\u0026rdquo; then click Delete bucket.\nDelete IAM Policy, IAM Role, and IAM User In the IAM homepage, select Role from the left navigation bar, choose the Role you want to delete, and click Delete.\nType \u0026ldquo;delete\u0026rdquo; and click Delete.\nSimilarly, in the IAM homepage, select Policy from the left navigation bar, choose the Policy you want to delete, and click Delete.\nType the Policy name \u0026ldquo;kmsonlyread,\u0026rdquo; then click Delete.\nIn the IAM homepage, select Users from the left navigation bar, choose the Users you want to delete, and click Delete.\nType \u0026ldquo;delete\u0026rdquo; and click Delete.\nDelete Lambda In the Lambda homepage, select Function from the left navigation bar, choose the Function you want to delete, click Action, and then select Delete.\nType \u0026ldquo;delete\u0026rdquo; and click Delete.\nDelete EventBridge In the EventBridge homepage, select Rule from the left navigation bar, choose the Rules you want to delete, and click Delete.\nType \u0026ldquo;delete\u0026rdquo; and click Delete.\nDisable Macie In the Macie homepage, select Settings from the left navigation bar, then under Disable Macie, click Disable Macie.\nDelete SNS In the SNS homepage, select Topics from the left navigation bar, choose the Topics you want to delete, and click Delete.\nType \u0026ldquo;delete\u0026rdquo; and click Delete.\nDelete KMS In the KMS homepage, select Customer managed keys from the left navigation bar, choose the Customer managed keys you want to delete, click Key action, and select Disable.\nCurrently, you can only disable the KMS key. You will need to wait approximately 7 days before you can delete the KMS key.\n"
},
{
	"uri": "/2-prerequiste/2.5-createkms/",
	"title": "Create KMS",
	"tags": [],
	"description": "",
	"content": "Amazon KMS AWS Key Management Service (KMS) is an Amazon Web Services encryption key management service that enables you to create, manage, and control cryptographic keys to protect data across AWS applications and services. KMS supports data encryption, digital signing, and generating message authentication codes (MACs) to ensure data security and integrity.\nAccess the KMS management console.\nSelect Create key, then click Next. Set a name in the Alias field, for example, \u0026ldquo;kmskey,\u0026rdquo; and optionally write a description. Finally, click Next.\nSelect the previously created role \u0026ldquo;kmskeyadmin,\u0026rdquo; then choose Next and Finish.\n"
},
{
	"uri": "/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]